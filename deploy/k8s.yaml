---
apiVersion: v1
kind: Secret
metadata:
  name: backstage-secrets
  namespace: default
  annotations:
    'backstage.io/kubernetes-id': backstage
type: Opaque
data:
  GITHUB_TOKEN: {{GITHUB_TOKEN}} #set it up in ur bash/zsh profile file
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: default
  annotations:
    'backstage.io/kubernetes-id': backstage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backstage
  template:
    metadata:
      labels:
        app: backstage
      annotations:
        'backstage.io/kubernetes-id': backstage
    spec:
      hostAliases:
      - ip: 192.168.106.2 # needs update, use your k8s node ip
        hostnames:
        - backstage.localhost.in
        - keycloak.localhost.in
      containers:
        - name: oauth2-proxy
          image: quay.io/oauth2-proxy/oauth2-proxy:v7.4.0
          args:
            - --config=/etc/oauth2_proxy/oauth2_proxy.cfg
            - --show-debug-on-error=true
            - --metrics-address=0.0.0.0:44180
            - --http-address=0.0.0.0:4180
          ports:
          - containerPort: 4180
            name: http
            protocol: TCP
          - containerPort: 44180
            name: metrics
            protocol: TCP
          env:
          - name: OAUTH2_PROXY_COOKIE_NAME
            value: backstage_oauth
          - name: OAUTH2_PROXY_COOKIE_SECRET
            value: "ZktVak45TlNpQThmUXkyc0l4azM1ODRneE5NYzhYOVI="
          - name: OAUTH2_PROXY_CLIENT_ID
            value: "backstage-oauth-proxy"
          - name: OAUTH2_PROXY_CLIENT_SECRET
            value: "JtfIkkcFNCCNWCUE9lg4gT5fk6mA3m02" # needs update after configuring keycloak client
          readinessProbe:
            httpGet:
              port: http
              path: /ping
              scheme: HTTP
          livenessProbe:
            httpGet:
              port: http
              path: /ping
              scheme: HTTP
          volumeMounts:                                                                                                                                                             
            - mountPath: /etc/oauth2_proxy/oauth2_proxy.cfg
              name: configmain
              subPath: oauth2_proxy.cfg
        - name: backstage
          image: backstage:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 7007
          envFrom:
            # - secretRef:
            #     name: postgres-secrets
            - secretRef:
                name: backstage-secrets
          readinessProbe:
            httpGet:
              port: 7007
              path: /healthcheck
          livenessProbe:
            httpGet:
              port: 7007
              path: /healthcheck
          env:
            - name: K8S_CLUSTER_URL
              value: "https://kubernetes.default"
            - name: "K8S_BACKSTAGE_SA_TOKEN"
              valueFrom:
                secretKeyRef:
                  key: "token"
                  name: "backstage-sa-token"
      volumes:
      - configMap:
          name: backstage-oauth2-proxy
        name: configmain
---
apiVersion: v1
kind: Service
metadata:
  name: backstage
  namespace: default
  annotations:
    'backstage.io/kubernetes-id': backstage
spec:
  selector:
    app: backstage
  ports:
    - name: http
      port: 80
      targetPort: 4180 #oauth proxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backstage-oauth2-proxy
  namespace: default
  annotations:
    'backstage.io/kubernetes-id': backstage
data:
  oauth2_proxy.cfg: |-
    email_domains = [ "*" ]
    upstreams =  [ "http://localhost:7007" ]
    cookie_secure = "false"
    pass_access_token = "true"
    pass_user_headers = "true"
    pass_authorization_header = "true"
    provider = "keycloak-oidc"
    redirect_url = "http://backstage.localhost.in/oauth2/callback"
    # oidc_issuer_url = "http://keycloak/realms/master"
    oidc_issuer_url = "http://keycloak.localhost.in/realms/master"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backstage 
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.tls: "false"
    traefik.ingress.kubernetes.io/router.middlewares: default-https-redirectscheme@kubernetescrd
spec:
  rules:
  - host: backstage.localhost.in
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            name: backstage
            port:
              number: 80
---
# Redirect to https
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: https-redirectscheme
spec:
  redirectScheme:
    scheme: https
    permanent: true
---