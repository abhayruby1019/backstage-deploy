name: Build and Deploy
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.7.0]
        pnpm-version: [8.7.6]
    steps:
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: ${{ matrix.pnpm-version }}
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: test
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          package-manager: pnpm

      - name: pnpm run build
        run: |
          pnpm build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Checkout Frontend Repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        continue-on-error: false
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-south-1
          role-to-assume: arn:aws:iam::101217072180:role/github-oidc-iam-assume-role #change
          role-session-name: dev-deploy

      - name: Build Docker Image
        run: |
          DOCKER_BUILDKIT=1 docker image build . -f Dockerfile --tag 101217072180.dkr.ecr.ap-south-1.amazonaws.com/frontend-repo:${{ github.sha }}

      - name: Push docker image to ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 101217072180.dkr.ecr.ap-south-1.amazonaws.com
          docker push 101217072180.dkr.ecr.ap-south-1.amazonaws.com/frontend-repo:${{ github.sha }}
